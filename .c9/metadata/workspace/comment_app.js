{"filter":false,"title":"comment_app.js","tooltip":"/comment_app.js","undoManager":{"mark":6,"position":6,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":129,"column":3},"action":"insert","lines":["/* This module defines the app along with several middle ware services"," */","","var app = angular.module('myApp', []);","","//we set this object up to act as a service that will handle calling the","//routes necessary to work with comments","function CommentObj($http) {","    this.getComment = function(commentId, callback) {","        $http.get('/comments/get', {","                params: {","                    commentId: commentId","                }","            })","            .success(function(data, status, headers, config) {","                callback(null, data);","            })","            .error(function(data, status, headers, config) {","                callback(data, {});","            });","    };","    this.addComment = function(rootCommentId, parentId,","        newComment, callback) {","        $http.post('/comments/add', {","                rootCommentId: rootCommentId,","                parentCommentId: parentId,","                newComment: newComment","            })","            .success(function(data, status, headers, config) {","                callback(null, data);","            })","            .error(function(data, status, headers, config) {});","    };","}","","//here is where the above object is used as a service","app.service('commentSrv', ['$http', CommentObj]);","","//create the photo controller","app.controller('photoController', ['$scope', '$http', 'commentSrv',","    function($scope, $http, commentSrv) {","        $http.get('/photos')","            .success(function(data, status, headers, config) {","                $scope.photos = data;","                $scope.photo = $scope.photos[0];","                $scope.loadComments();","            })","            .error(function(data, status, headers, config) {","                $scope.photos = [];","            });","        $scope.loadComments = function() {","            commentSrv.getComment($scope.photo.commentId,","                function(err, comment) {","                    if (err) {","                        $scope.commentThread = {};","                    }","                    else {","                        $scope.commentThread = comment;","                    }","                });","        };","        $scope.addReply = function(parentCommentId, subject, body) {","            var newComment = {","                subject: subject,","                body: body","            };","            commentSrv.addComment($scope.commentThread._id,","                parentCommentId,","                newComment,","                function(err, comment) {","                    $scope.loadComments();","                });","        };","        $scope.setPhoto = function(photoId) {","            $http.get('/photo', {","                    params: {","                        photoId: photoId","                    }","                })","                .success(function(data, status, headers, config) {","                    $scope.photo = data;","                    $scope.loadComments();","                })","                .error(function(data, status, headers, config) {","                    $scope.photo = {};","                });","        };","    }","]);","","//create the page controller","app.controller('pageController', ['$scope', '$http', 'commentSrv',","    function($scope, $http, commentSrv) {","        $http.get('/page', {","                params: {","                    pageName: \"Photos Page\"","                }","            })","            .success(function(data, status, headers, config) {","                $scope.page = data;","                $scope.loadComments();","            })","            .error(function(data, status, headers, config) {","                $scope.Page = {};","            });","        $scope.addReply = function(parentCommentId, subject, body) {","            var newComment = {","                subject: subject,","                body: body","            };","            commentSrv.addComment($scope.commentThread._id,","                parentCommentId,","                newComment,","                function(err, comment) {","                    $scope.loadComments();","                });","        };","        $scope.loadComments = function() {","            commentSrv.getComment($scope.page.commentId,","                function(err, comment) {","                    if (err) {","                        $scope.commentThread = {};","                    }","                    else {","                        $scope.commentThread = comment;","                    }","                });","        };","    }","]);"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["/* This module defines the app along with several middle ware services"," */",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":40},"action":"remove","lines":["//we set this object up to act as a service that will handle calling the","//routes necessary to work with comments"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":0},"end":{"row":31,"column":53},"action":"remove","lines":["//here is where the above object is used as a service"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":0},"end":{"row":34,"column":29},"action":"remove","lines":["//create the photo controller"]}]}],[{"group":"doc","deltas":[{"start":{"row":86,"column":0},"end":{"row":86,"column":28},"action":"remove","lines":["//create the page controller"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":0},"end":{"row":125,"column":3},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1417464498080,"hash":"fb2c76a1165ada411fbf0544e7c7daac5672ccb4"}